// Code generated by protoc-gen-yarpc-go. DO NOT EDIT.
// source: uber/cadence/api/v1/service_domain.proto

package apiv1

import (
	"context"
	"io/ioutil"
	"reflect"

	"github.com/gogo/protobuf/jsonpb"
	"github.com/gogo/protobuf/proto"
	"go.uber.org/fx"
	"go.uber.org/yarpc"
	"go.uber.org/yarpc/api/transport"
	"go.uber.org/yarpc/api/x/restriction"
	"go.uber.org/yarpc/encoding/protobuf"
	"go.uber.org/yarpc/encoding/protobuf/reflection"
)

var _ = ioutil.NopCloser

// DomainAPIYARPCClient is the YARPC client-side interface for the DomainAPI service.
type DomainAPIYARPCClient interface {
	RegisterDomain(context.Context, *RegisterDomainRequest, ...yarpc.CallOption) (*RegisterDomainResponse, error)
	DescribeDomain(context.Context, *DescribeDomainRequest, ...yarpc.CallOption) (*DescribeDomainResponse, error)
	ListDomains(context.Context, *ListDomainsRequest, ...yarpc.CallOption) (*ListDomainsResponse, error)
	UpdateDomain(context.Context, *UpdateDomainRequest, ...yarpc.CallOption) (*UpdateDomainResponse, error)
	FailoverDomain(context.Context, *FailoverDomainRequest, ...yarpc.CallOption) (*FailoverDomainResponse, error)
	DeprecateDomain(context.Context, *DeprecateDomainRequest, ...yarpc.CallOption) (*DeprecateDomainResponse, error)
	DeleteDomain(context.Context, *DeleteDomainRequest, ...yarpc.CallOption) (*DeleteDomainResponse, error)
}

func newDomainAPIYARPCClient(clientConfig transport.ClientConfig, anyResolver jsonpb.AnyResolver, options ...protobuf.ClientOption) DomainAPIYARPCClient {
	return &_DomainAPIYARPCCaller{protobuf.NewStreamClient(
		protobuf.ClientParams{
			ServiceName:  "uber.cadence.api.v1.DomainAPI",
			ClientConfig: clientConfig,
			AnyResolver:  anyResolver,
			Options:      options,
		},
	)}
}

// NewDomainAPIYARPCClient builds a new YARPC client for the DomainAPI service.
func NewDomainAPIYARPCClient(clientConfig transport.ClientConfig, options ...protobuf.ClientOption) DomainAPIYARPCClient {
	return newDomainAPIYARPCClient(clientConfig, nil, options...)
}

// DomainAPIYARPCServer is the YARPC server-side interface for the DomainAPI service.
type DomainAPIYARPCServer interface {
	RegisterDomain(context.Context, *RegisterDomainRequest) (*RegisterDomainResponse, error)
	DescribeDomain(context.Context, *DescribeDomainRequest) (*DescribeDomainResponse, error)
	ListDomains(context.Context, *ListDomainsRequest) (*ListDomainsResponse, error)
	UpdateDomain(context.Context, *UpdateDomainRequest) (*UpdateDomainResponse, error)
	FailoverDomain(context.Context, *FailoverDomainRequest) (*FailoverDomainResponse, error)
	DeprecateDomain(context.Context, *DeprecateDomainRequest) (*DeprecateDomainResponse, error)
	DeleteDomain(context.Context, *DeleteDomainRequest) (*DeleteDomainResponse, error)
}

type buildDomainAPIYARPCProceduresParams struct {
	Server      DomainAPIYARPCServer
	AnyResolver jsonpb.AnyResolver
}

func buildDomainAPIYARPCProcedures(params buildDomainAPIYARPCProceduresParams) []transport.Procedure {
	handler := &_DomainAPIYARPCHandler{params.Server}
	return protobuf.BuildProcedures(
		protobuf.BuildProceduresParams{
			ServiceName: "uber.cadence.api.v1.DomainAPI",
			UnaryHandlerParams: []protobuf.BuildProceduresUnaryHandlerParams{
				{
					MethodName: "RegisterDomain",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.RegisterDomain,
							NewRequest:  newDomainAPIServiceRegisterDomainYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
				{
					MethodName: "DescribeDomain",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.DescribeDomain,
							NewRequest:  newDomainAPIServiceDescribeDomainYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
				{
					MethodName: "ListDomains",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.ListDomains,
							NewRequest:  newDomainAPIServiceListDomainsYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
				{
					MethodName: "UpdateDomain",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.UpdateDomain,
							NewRequest:  newDomainAPIServiceUpdateDomainYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
				{
					MethodName: "FailoverDomain",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.FailoverDomain,
							NewRequest:  newDomainAPIServiceFailoverDomainYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
				{
					MethodName: "DeprecateDomain",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.DeprecateDomain,
							NewRequest:  newDomainAPIServiceDeprecateDomainYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
				{
					MethodName: "DeleteDomain",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.DeleteDomain,
							NewRequest:  newDomainAPIServiceDeleteDomainYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
			},
			OnewayHandlerParams: []protobuf.BuildProceduresOnewayHandlerParams{},
			StreamHandlerParams: []protobuf.BuildProceduresStreamHandlerParams{},
		},
	)
}

// BuildDomainAPIYARPCProcedures prepares an implementation of the DomainAPI service for YARPC registration.
func BuildDomainAPIYARPCProcedures(server DomainAPIYARPCServer) []transport.Procedure {
	return buildDomainAPIYARPCProcedures(buildDomainAPIYARPCProceduresParams{Server: server})
}

// FxDomainAPIYARPCClientParams defines the input
// for NewFxDomainAPIYARPCClient. It provides the
// paramaters to get a DomainAPIYARPCClient in an
// Fx application.
type FxDomainAPIYARPCClientParams struct {
	fx.In

	Provider    yarpc.ClientConfig
	AnyResolver jsonpb.AnyResolver  `name:"yarpcfx" optional:"true"`
	Restriction restriction.Checker `optional:"true"`
}

// FxDomainAPIYARPCClientResult defines the output
// of NewFxDomainAPIYARPCClient. It provides a
// DomainAPIYARPCClient to an Fx application.
type FxDomainAPIYARPCClientResult struct {
	fx.Out

	Client DomainAPIYARPCClient

	// We are using an fx.Out struct here instead of just returning a client
	// so that we can add more values or add named versions of the client in
	// the future without breaking any existing code.
}

// NewFxDomainAPIYARPCClient provides a DomainAPIYARPCClient
// to an Fx application using the given name for routing.
//
//	fx.Provide(
//	  apiv1.NewFxDomainAPIYARPCClient("service-name"),
//	  ...
//	)
func NewFxDomainAPIYARPCClient(name string, options ...protobuf.ClientOption) interface{} {
	return func(params FxDomainAPIYARPCClientParams) FxDomainAPIYARPCClientResult {
		cc := params.Provider.ClientConfig(name)

		if params.Restriction != nil {
			if namer, ok := cc.GetUnaryOutbound().(transport.Namer); ok {
				if err := params.Restriction.Check(protobuf.Encoding, namer.TransportName()); err != nil {
					panic(err.Error())
				}
			}
		}

		return FxDomainAPIYARPCClientResult{
			Client: newDomainAPIYARPCClient(cc, params.AnyResolver, options...),
		}
	}
}

// FxDomainAPIYARPCProceduresParams defines the input
// for NewFxDomainAPIYARPCProcedures. It provides the
// paramaters to get DomainAPIYARPCServer procedures in an
// Fx application.
type FxDomainAPIYARPCProceduresParams struct {
	fx.In

	Server      DomainAPIYARPCServer
	AnyResolver jsonpb.AnyResolver `name:"yarpcfx" optional:"true"`
}

// FxDomainAPIYARPCProceduresResult defines the output
// of NewFxDomainAPIYARPCProcedures. It provides
// DomainAPIYARPCServer procedures to an Fx application.
//
// The procedures are provided to the "yarpcfx" value group.
// Dig 1.2 or newer must be used for this feature to work.
type FxDomainAPIYARPCProceduresResult struct {
	fx.Out

	Procedures     []transport.Procedure `group:"yarpcfx"`
	ReflectionMeta reflection.ServerMeta `group:"yarpcfx"`
}

// NewFxDomainAPIYARPCProcedures provides DomainAPIYARPCServer procedures to an Fx application.
// It expects a DomainAPIYARPCServer to be present in the container.
//
//	fx.Provide(
//	  apiv1.NewFxDomainAPIYARPCProcedures(),
//	  ...
//	)
func NewFxDomainAPIYARPCProcedures() interface{} {
	return func(params FxDomainAPIYARPCProceduresParams) FxDomainAPIYARPCProceduresResult {
		return FxDomainAPIYARPCProceduresResult{
			Procedures: buildDomainAPIYARPCProcedures(buildDomainAPIYARPCProceduresParams{
				Server:      params.Server,
				AnyResolver: params.AnyResolver,
			}),
			ReflectionMeta: reflection.ServerMeta{
				ServiceName:     "uber.cadence.api.v1.DomainAPI",
				FileDescriptors: yarpcFileDescriptorClosure2e37d15268893114,
			},
		}
	}
}

type _DomainAPIYARPCCaller struct {
	streamClient protobuf.StreamClient
}

func (c *_DomainAPIYARPCCaller) RegisterDomain(ctx context.Context, request *RegisterDomainRequest, options ...yarpc.CallOption) (*RegisterDomainResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "RegisterDomain", request, newDomainAPIServiceRegisterDomainYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*RegisterDomainResponse)
	if !ok {
		return nil, protobuf.CastError(emptyDomainAPIServiceRegisterDomainYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_DomainAPIYARPCCaller) DescribeDomain(ctx context.Context, request *DescribeDomainRequest, options ...yarpc.CallOption) (*DescribeDomainResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "DescribeDomain", request, newDomainAPIServiceDescribeDomainYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*DescribeDomainResponse)
	if !ok {
		return nil, protobuf.CastError(emptyDomainAPIServiceDescribeDomainYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_DomainAPIYARPCCaller) ListDomains(ctx context.Context, request *ListDomainsRequest, options ...yarpc.CallOption) (*ListDomainsResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "ListDomains", request, newDomainAPIServiceListDomainsYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*ListDomainsResponse)
	if !ok {
		return nil, protobuf.CastError(emptyDomainAPIServiceListDomainsYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_DomainAPIYARPCCaller) UpdateDomain(ctx context.Context, request *UpdateDomainRequest, options ...yarpc.CallOption) (*UpdateDomainResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "UpdateDomain", request, newDomainAPIServiceUpdateDomainYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*UpdateDomainResponse)
	if !ok {
		return nil, protobuf.CastError(emptyDomainAPIServiceUpdateDomainYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_DomainAPIYARPCCaller) FailoverDomain(ctx context.Context, request *FailoverDomainRequest, options ...yarpc.CallOption) (*FailoverDomainResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "FailoverDomain", request, newDomainAPIServiceFailoverDomainYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*FailoverDomainResponse)
	if !ok {
		return nil, protobuf.CastError(emptyDomainAPIServiceFailoverDomainYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_DomainAPIYARPCCaller) DeprecateDomain(ctx context.Context, request *DeprecateDomainRequest, options ...yarpc.CallOption) (*DeprecateDomainResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "DeprecateDomain", request, newDomainAPIServiceDeprecateDomainYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*DeprecateDomainResponse)
	if !ok {
		return nil, protobuf.CastError(emptyDomainAPIServiceDeprecateDomainYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_DomainAPIYARPCCaller) DeleteDomain(ctx context.Context, request *DeleteDomainRequest, options ...yarpc.CallOption) (*DeleteDomainResponse, error) {
	responseMessage, err := c.streamClient.Call(ctx, "DeleteDomain", request, newDomainAPIServiceDeleteDomainYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*DeleteDomainResponse)
	if !ok {
		return nil, protobuf.CastError(emptyDomainAPIServiceDeleteDomainYARPCResponse, responseMessage)
	}
	return response, err
}

type _DomainAPIYARPCHandler struct {
	server DomainAPIYARPCServer
}

func (h *_DomainAPIYARPCHandler) RegisterDomain(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *RegisterDomainRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*RegisterDomainRequest)
		if !ok {
			return nil, protobuf.CastError(emptyDomainAPIServiceRegisterDomainYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.RegisterDomain(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_DomainAPIYARPCHandler) DescribeDomain(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *DescribeDomainRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*DescribeDomainRequest)
		if !ok {
			return nil, protobuf.CastError(emptyDomainAPIServiceDescribeDomainYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.DescribeDomain(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_DomainAPIYARPCHandler) ListDomains(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *ListDomainsRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*ListDomainsRequest)
		if !ok {
			return nil, protobuf.CastError(emptyDomainAPIServiceListDomainsYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.ListDomains(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_DomainAPIYARPCHandler) UpdateDomain(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *UpdateDomainRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*UpdateDomainRequest)
		if !ok {
			return nil, protobuf.CastError(emptyDomainAPIServiceUpdateDomainYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.UpdateDomain(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_DomainAPIYARPCHandler) FailoverDomain(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *FailoverDomainRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*FailoverDomainRequest)
		if !ok {
			return nil, protobuf.CastError(emptyDomainAPIServiceFailoverDomainYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.FailoverDomain(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_DomainAPIYARPCHandler) DeprecateDomain(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *DeprecateDomainRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*DeprecateDomainRequest)
		if !ok {
			return nil, protobuf.CastError(emptyDomainAPIServiceDeprecateDomainYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.DeprecateDomain(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_DomainAPIYARPCHandler) DeleteDomain(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *DeleteDomainRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*DeleteDomainRequest)
		if !ok {
			return nil, protobuf.CastError(emptyDomainAPIServiceDeleteDomainYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.DeleteDomain(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func newDomainAPIServiceRegisterDomainYARPCRequest() proto.Message {
	return &RegisterDomainRequest{}
}

func newDomainAPIServiceRegisterDomainYARPCResponse() proto.Message {
	return &RegisterDomainResponse{}
}

func newDomainAPIServiceDescribeDomainYARPCRequest() proto.Message {
	return &DescribeDomainRequest{}
}

func newDomainAPIServiceDescribeDomainYARPCResponse() proto.Message {
	return &DescribeDomainResponse{}
}

func newDomainAPIServiceListDomainsYARPCRequest() proto.Message {
	return &ListDomainsRequest{}
}

func newDomainAPIServiceListDomainsYARPCResponse() proto.Message {
	return &ListDomainsResponse{}
}

func newDomainAPIServiceUpdateDomainYARPCRequest() proto.Message {
	return &UpdateDomainRequest{}
}

func newDomainAPIServiceUpdateDomainYARPCResponse() proto.Message {
	return &UpdateDomainResponse{}
}

func newDomainAPIServiceFailoverDomainYARPCRequest() proto.Message {
	return &FailoverDomainRequest{}
}

func newDomainAPIServiceFailoverDomainYARPCResponse() proto.Message {
	return &FailoverDomainResponse{}
}

func newDomainAPIServiceDeprecateDomainYARPCRequest() proto.Message {
	return &DeprecateDomainRequest{}
}

func newDomainAPIServiceDeprecateDomainYARPCResponse() proto.Message {
	return &DeprecateDomainResponse{}
}

func newDomainAPIServiceDeleteDomainYARPCRequest() proto.Message {
	return &DeleteDomainRequest{}
}

func newDomainAPIServiceDeleteDomainYARPCResponse() proto.Message {
	return &DeleteDomainResponse{}
}

var (
	emptyDomainAPIServiceRegisterDomainYARPCRequest   = &RegisterDomainRequest{}
	emptyDomainAPIServiceRegisterDomainYARPCResponse  = &RegisterDomainResponse{}
	emptyDomainAPIServiceDescribeDomainYARPCRequest   = &DescribeDomainRequest{}
	emptyDomainAPIServiceDescribeDomainYARPCResponse  = &DescribeDomainResponse{}
	emptyDomainAPIServiceListDomainsYARPCRequest      = &ListDomainsRequest{}
	emptyDomainAPIServiceListDomainsYARPCResponse     = &ListDomainsResponse{}
	emptyDomainAPIServiceUpdateDomainYARPCRequest     = &UpdateDomainRequest{}
	emptyDomainAPIServiceUpdateDomainYARPCResponse    = &UpdateDomainResponse{}
	emptyDomainAPIServiceFailoverDomainYARPCRequest   = &FailoverDomainRequest{}
	emptyDomainAPIServiceFailoverDomainYARPCResponse  = &FailoverDomainResponse{}
	emptyDomainAPIServiceDeprecateDomainYARPCRequest  = &DeprecateDomainRequest{}
	emptyDomainAPIServiceDeprecateDomainYARPCResponse = &DeprecateDomainResponse{}
	emptyDomainAPIServiceDeleteDomainYARPCRequest     = &DeleteDomainRequest{}
	emptyDomainAPIServiceDeleteDomainYARPCResponse    = &DeleteDomainResponse{}
)

var yarpcFileDescriptorClosure2e37d15268893114 = [][]byte{
	// uber/cadence/api/v1/service_domain.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x5d, 0x53, 0xdb, 0x46,
		0x14, 0x8d, 0x49, 0x48, 0xf0, 0x35, 0xd8, 0xb0, 0xfe, 0x12, 0x66, 0xa6, 0xf1, 0x38, 0xfd, 0x70,
		0xd3, 0x56, 0x2e, 0x4e, 0xbf, 0xa6, 0x79, 0xc2, 0x18, 0x4a, 0xa6, 0x09, 0xe3, 0x11, 0xc9, 0x43,
		0xdb, 0x07, 0x75, 0x25, 0x2d, 0x66, 0x07, 0xd9, 0x72, 0xb5, 0x2b, 0x13, 0xe7, 0xad, 0xff, 0xa3,
		0xbf, 0xaf, 0x4f, 0xfd, 0x11, 0x1d, 0xed, 0xae, 0xc0, 0x92, 0x25, 0x70, 0x02, 0x79, 0x13, 0x77,
		0xcf, 0x9e, 0x7b, 0xf7, 0xdc, 0xab, 0xb3, 0x16, 0xd0, 0x0e, 0x2c, 0xe2, 0x77, 0x6c, 0xec, 0x90,
		0xb1, 0x4d, 0x3a, 0x78, 0x42, 0x3b, 0xd3, 0xdd, 0x0e, 0x23, 0xfe, 0x94, 0xda, 0xc4, 0x74, 0xbc,
		0x11, 0xa6, 0x63, 0x7d, 0xe2, 0x7b, 0xdc, 0x43, 0xe5, 0x10, 0xa9, 0x2b, 0xa4, 0x8e, 0x27, 0x54,
		0x9f, 0xee, 0x36, 0x3e, 0x19, 0x7a, 0xde, 0xd0, 0x25, 0x1d, 0x01, 0xb1, 0x82, 0xd3, 0x8e, 0x13,
		0xf8, 0x98, 0x53, 0x4f, 0x6d, 0x6a, 0x34, 0x93, 0xeb, 0xa7, 0x94, 0xb8, 0x8e, 0x39, 0xc2, 0xec,
		0x3c, 0x42, 0xa4, 0x15, 0x30, 0x9f, 0xb8, 0xf5, 0x4f, 0x1e, 0xaa, 0x06, 0x19, 0x52, 0xc6, 0x89,
		0xdf, 0x17, 0x0b, 0x06, 0xf9, 0x2b, 0x20, 0x8c, 0xa3, 0xcf, 0xa0, 0xc8, 0x88, 0x1d, 0xf8, 0x94,
		0xcf, 0x4c, 0xee, 0x9d, 0x93, 0xb1, 0x96, 0x6b, 0xe6, 0xda, 0x79, 0x63, 0x23, 0x8a, 0xbe, 0x0e,
		0x83, 0x08, 0xc1, 0x83, 0x31, 0x1e, 0x11, 0x6d, 0x45, 0x2c, 0x8a, 0x67, 0xd4, 0x84, 0x82, 0x43,
		0x98, 0xed, 0xd3, 0x49, 0x58, 0xad, 0x76, 0x5f, 0x2c, 0xcd, 0x87, 0xd0, 0x63, 0x28, 0x78, 0x17,
		0x63, 0xe2, 0x9b, 0x64, 0x84, 0xa9, 0xab, 0x3d, 0x10, 0x08, 0x10, 0xa1, 0x83, 0x30, 0x82, 0xce,
		0xe0, 0xc9, 0x85, 0xe7, 0x9f, 0x9f, 0xba, 0xde, 0x85, 0x49, 0xde, 0x12, 0x3b, 0x08, 0xb7, 0x99,
		0x3e, 0xe1, 0x64, 0x2c, 0x9e, 0x26, 0xc4, 0xa7, 0x9e, 0xa3, 0xad, 0x36, 0x73, 0xed, 0x42, 0x77,
		0x5b, 0x97, 0x4a, 0xe8, 0x91, 0x12, 0x7a, 0x5f, 0x29, 0x65, 0x34, 0x23, 0x96, 0x83, 0x88, 0xc4,
		0x88, 0x38, 0x06, 0x82, 0x02, 0x0d, 0x60, 0xcd, 0x76, 0x83, 0xf0, 0xfc, 0x4c, 0x7b, 0xd8, 0xbc,
		0xdf, 0x2e, 0x74, 0xbf, 0xd3, 0x53, 0xba, 0xa1, 0xef, 0x4b, 0x90, 0x41, 0x26, 0x2e, 0xb5, 0x05,
		0xf9, 0xbe, 0x37, 0x3e, 0xa5, 0xc3, 0x28, 0xd3, 0x25, 0x0b, 0xd2, 0xa1, 0x8c, 0x6d, 0x4e, 0xa7,
		0xc4, 0x54, 0x21, 0x53, 0x28, 0xf4, 0x48, 0x1c, 0x72, 0x4b, 0x2e, 0x29, 0xb6, 0xe3, 0x50, 0xae,
		0x23, 0x78, 0xe0, 0x60, 0x8e, 0xb5, 0xb5, 0x6b, 0xb2, 0xa7, 0xf6, 0x48, 0xef, 0x63, 0x8e, 0x0f,
		0xc6, 0xdc, 0x9f, 0x19, 0x82, 0x01, 0xb5, 0x61, 0x93, 0x32, 0x73, 0xe8, 0x7a, 0x16, 0x76, 0xd5,
		0x80, 0x69, 0xf9, 0x66, 0xae, 0xbd, 0x66, 0x14, 0x29, 0xfb, 0x45, 0x84, 0x25, 0x01, 0xfa, 0x03,
		0xea, 0x67, 0x94, 0x71, 0xcf, 0x9f, 0x99, 0xd8, 0xb7, 0xcf, 0xe8, 0x14, 0xbb, 0x26, 0xe3, 0x98,
		0x07, 0x4c, 0x83, 0x66, 0xae, 0x5d, 0xec, 0x3e, 0x49, 0x2d, 0x63, 0x4f, 0x61, 0x4f, 0x04, 0xd4,
		0xa8, 0x2a, 0x8e, 0x78, 0x18, 0x7d, 0x0b, 0x95, 0x05, 0xf2, 0xc0, 0xa7, 0x5a, 0x41, 0x28, 0x80,
		0x12, 0x9b, 0xde, 0xf8, 0x14, 0x61, 0x68, 0x4c, 0x29, 0xa3, 0x16, 0x75, 0xc3, 0x71, 0x4b, 0x56,
		0xb4, 0xbe, 0x7c, 0x45, 0xda, 0x15, 0x4d, 0xa2, 0xa8, 0x1f, 0xa0, 0x9e, 0x96, 0x22, 0xac, 0x6b,
		0x43, 0xd4, 0x55, 0x5d, 0xdc, 0x1a, 0x96, 0xf6, 0x77, 0x0e, 0xb6, 0xe3, 0xed, 0x64, 0xa6, 0x35,
		0x33, 0x7d, 0x32, 0x0c, 0x67, 0xbb, 0x28, 0x7a, 0x76, 0xf8, 0x1e, 0x3d, 0xdb, 0x9b, 0xef, 0x3f,
		0xeb, 0xcd, 0x0c, 0x41, 0x24, 0xbb, 0x58, 0xc3, 0xa9, 0x8b, 0x88, 0xc1, 0xa7, 0x29, 0x25, 0x44,
		0xd3, 0x85, 0x39, 0xf7, 0xa9, 0x15, 0x70, 0xa2, 0x95, 0xc4, 0xeb, 0x90, 0x21, 0x54, 0x8c, 0xda,
		0x68, 0x26, 0x53, 0xa9, 0xa7, 0xbd, 0x88, 0xac, 0xf1, 0x23, 0xe4, 0x2f, 0xe7, 0x0b, 0x6d, 0xc2,
		0xfd, 0x73, 0x32, 0x53, 0x16, 0x10, 0x3e, 0xa2, 0x0a, 0xac, 0x4e, 0xb1, 0x1b, 0x44, 0x6f, 0xbe,
		0xfc, 0xe3, 0xe7, 0x95, 0x9f, 0x72, 0x8d, 0x17, 0xb0, 0x73, 0xcd, 0x21, 0xdf, 0x87, 0xaa, 0xa5,
		0x41, 0x2d, 0xa9, 0x22, 0x9b, 0x78, 0x63, 0x46, 0x5a, 0xff, 0xad, 0x41, 0xf9, 0xcd, 0xc4, 0xc1,
		0x9c, 0xdc, 0x99, 0x6d, 0x3d, 0x87, 0x42, 0x20, 0x18, 0x85, 0x85, 0x8a, 0xf7, 0xa0, 0xd0, 0x6d,
		0x2c, 0x78, 0xcb, 0x61, 0xe8, 0xb2, 0xaf, 0x30, 0x3b, 0x37, 0x40, 0xc2, 0xc3, 0xe7, 0xa4, 0xe7,
		0x15, 0x6e, 0xf4, 0xbc, 0xf5, 0x05, 0xcf, 0x3b, 0x54, 0x3e, 0xb0, 0x21, 0x66, 0xaa, 0x9b, 0xda,
		0xc5, 0x94, 0x23, 0x2f, 0xb8, 0xc0, 0x92, 0xde, 0x59, 0xbc, 0xbd, 0x77, 0xee, 0xc3, 0xba, 0x85,
		0x1d, 0xd3, 0xa2, 0x63, 0xec, 0x53, 0xc2, 0xd4, 0xfc, 0x35, 0x53, 0x2b, 0xef, 0x61, 0xa7, 0xa7,
		0x70, 0x46, 0xc1, 0xba, 0xfa, 0xe3, 0x3a, 0x2b, 0xda, 0xfc, 0x68, 0x56, 0xb4, 0xf5, 0x81, 0x56,
		0x84, 0x3e, 0xb2, 0x15, 0x95, 0xaf, 0xb3, 0xa2, 0x8c, 0x8b, 0xa5, 0x92, 0x75, 0xb1, 0xcc, 0x5f,
		0x6d, 0xd5, 0x3b, 0xb9, 0xda, 0x9e, 0xc2, 0x96, 0x43, 0x5c, 0xc2, 0x89, 0x79, 0xd9, 0xf7, 0x99,
		0x56, 0x13, 0xf9, 0x4b, 0x72, 0x21, 0x6a, 0xf3, 0x0c, 0xf5, 0x61, 0xf3, 0x14, 0x53, 0xd7, 0x9b,
		0x12, 0xdf, 0xe4, 0x74, 0x44, 0xbc, 0x80, 0x6b, 0xf5, 0x9b, 0x66, 0xae, 0x14, 0x6d, 0x79, 0x2d,
		0x77, 0xa0, 0x97, 0x50, 0x4a, 0x58, 0x9f, 0xa6, 0x2d, 0xef, 0x72, 0xc5, 0xb8, 0xcb, 0x7d, 0xb0,
		0xa7, 0xb5, 0x7e, 0x85, 0x4a, 0xfc, 0xd5, 0x93, 0x36, 0x84, 0x9e, 0xc1, 0x43, 0x75, 0xcf, 0xe6,
		0x44, 0x55, 0x3b, 0xa9, 0x55, 0xa9, 0x4d, 0x0a, 0xda, 0x0a, 0xa0, 0x7a, 0xa8, 0x8e, 0x19, 0x37,
		0xaf, 0xc7, 0x50, 0x90, 0x10, 0xd9, 0x58, 0x59, 0x19, 0xc8, 0xd0, 0xb1, 0xb4, 0xa8, 0x86, 0x02,
		0xa4, 0x0d, 0x02, 0x08, 0x7c, 0x5d, 0x22, 0xf6, 0x92, 0xe3, 0xd0, 0x7a, 0x05, 0xb5, 0x64, 0xda,
		0xdb, 0x9c, 0xe2, 0x04, 0x6a, 0x7d, 0x32, 0xf1, 0x89, 0x7d, 0x87, 0x1e, 0xdc, 0xda, 0x86, 0xfa,
		0x02, 0xa9, 0x72, 0xfc, 0x01, 0x94, 0xfb, 0x62, 0xc4, 0xee, 0x2c, 0x59, 0x0d, 0x2a, 0x71, 0x46,
		0x95, 0xe9, 0x18, 0xaa, 0x7d, 0x61, 0xdc, 0x56, 0x22, 0xd7, 0x26, 0xac, 0x50, 0x47, 0xf2, 0x1f,
		0xdd, 0x33, 0x56, 0xa8, 0x83, 0x2a, 0xf3, 0xb4, 0x47, 0xf7, 0x24, 0x71, 0x6f, 0x23, 0xba, 0x0c,
		0x2c, 0x62, 0x5a, 0xb3, 0x50, 0xf8, 0x24, 0xdf, 0x6d, 0x84, 0xff, 0x0d, 0xd0, 0x4b, 0xca, 0xb8,
		0x8c, 0xb2, 0xa8, 0xb6, 0x1d, 0xc8, 0x4f, 0xf0, 0x90, 0x98, 0x8c, 0xbe, 0x93, 0x93, 0xb3, 0x6a,
		0xac, 0x85, 0x81, 0x13, 0xfa, 0x8e, 0xa0, 0xcf, 0xa1, 0x34, 0x26, 0x6f, 0xb9, 0x29, 0x10, 0x52,
		0xa5, 0xb0, 0xe2, 0x75, 0x63, 0x23, 0x0c, 0x0f, 0xf0, 0x90, 0x08, 0x95, 0x5a, 0x1c, 0xca, 0x31,
		0x6a, 0x55, 0xe6, 0xf7, 0xf0, 0x48, 0xe6, 0x66, 0x5a, 0x4e, 0xf8, 0xc8, 0xb5, 0x75, 0x46, 0xd8,
		0x65, 0xb3, 0x76, 0xff, 0x5d, 0x85, 0xbc, 0xdc, 0xbb, 0x37, 0x78, 0x81, 0x28, 0x14, 0xe3, 0x77,
		0x3e, 0x7a, 0xba, 0xfc, 0xcf, 0xab, 0xc6, 0x57, 0x4b, 0x61, 0xd5, 0xb9, 0x28, 0x14, 0xe3, 0x8d,
		0xc9, 0x48, 0x95, 0x3a, 0x0d, 0x19, 0xa9, 0x32, 0x3a, 0xfd, 0x27, 0x14, 0xe6, 0x94, 0x45, 0x5f,
		0xa4, 0xee, 0x5d, 0x6c, 0x6b, 0xa3, 0x7d, 0x33, 0x50, 0x65, 0xb0, 0x61, 0x7d, 0xde, 0xa2, 0x50,
		0x7b, 0xd9, 0x1f, 0x10, 0x8d, 0x2f, 0x97, 0x40, 0x5e, 0x29, 0x16, 0xf7, 0x90, 0x0c, 0xc5, 0x52,
		0xfd, 0x2d, 0x43, 0xb1, 0x0c, 0x53, 0x72, 0xa1, 0x94, 0xb0, 0x02, 0x94, 0xa5, 0x78, 0x9a, 0x0b,
		0x35, 0xbe, 0x5e, 0x0e, 0x7c, 0xa5, 0xde, 0xbc, 0x17, 0x64, 0xa8, 0x97, 0x62, 0x40, 0x19, 0xea,
		0xa5, 0x19, 0x4b, 0xcf, 0x82, 0xba, 0xed, 0x8d, 0xd2, 0xf0, 0x3d, 0x24, 0xa1, 0x27, 0xf2, 0xbf,
		0x03, 0x83, 0xf0, 0x62, 0x1c, 0xe4, 0x7e, 0xdf, 0x1d, 0x52, 0x7e, 0x16, 0x58, 0xba, 0xed, 0x8d,
		0x3a, 0xf3, 0xdf, 0xf2, 0xdf, 0x50, 0xc7, 0xed, 0x0c, 0x3d, 0xf9, 0xe9, 0xaf, 0x3e, 0xec, 0x9f,
		0xe3, 0x09, 0x9d, 0xee, 0x5a, 0x0f, 0x45, 0xec, 0xd9, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x88,
		0xba, 0xe3, 0xa0, 0x7d, 0x10, 0x00, 0x00,
	},
	// google/protobuf/duration.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0xcf, 0xcf, 0x4f,
		0xcf, 0x49, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x4f, 0x29, 0x2d, 0x4a,
		0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x03, 0x8b, 0x08, 0xf1, 0x43, 0xe4, 0xf5, 0x60, 0xf2, 0x4a, 0x56,
		0x5c, 0x1c, 0x2e, 0x50, 0x25, 0x42, 0x12, 0x5c, 0xec, 0xc5, 0xa9, 0xc9, 0xf9, 0x79, 0x29, 0xc5,
		0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x30, 0xae, 0x90, 0x08, 0x17, 0x6b, 0x5e, 0x62, 0x5e,
		0x7e, 0xb1, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x84, 0xe3, 0xd4, 0xcc, 0xc8, 0x25, 0x9c,
		0x9c, 0x9f, 0xab, 0x87, 0x66, 0xa6, 0x13, 0x2f, 0xcc, 0xc4, 0x00, 0x90, 0x48, 0x00, 0x63, 0x94,
		0x21, 0x54, 0x45, 0x7a, 0x7e, 0x4e, 0x62, 0x5e, 0xba, 0x5e, 0x7e, 0x51, 0x3a, 0xc2, 0x81, 0x25,
		0x95, 0x05, 0xa9, 0xc5, 0xfa, 0xd9, 0x79, 0xf9, 0xe5, 0x79, 0x70, 0xc7, 0x16, 0x24, 0xfd, 0x60,
		0x64, 0x5c, 0xc4, 0xc4, 0xec, 0x1e, 0xe0, 0xb4, 0x8a, 0x49, 0xce, 0x1d, 0xa2, 0x39, 0x00, 0xaa,
		0x43, 0x2f, 0x3c, 0x35, 0x27, 0xc7, 0x1b, 0xa4, 0x3e, 0x04, 0xa4, 0x35, 0x89, 0x0d, 0x6c, 0x94,
		0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xef, 0x8a, 0xb4, 0xc3, 0xfb, 0x00, 0x00, 0x00,
	},
	// google/protobuf/field_mask.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0xcf, 0xcf, 0x4f,
		0xcf, 0x49, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x4f, 0xcb, 0x4c, 0xcd,
		0x49, 0x89, 0xcf, 0x4d, 0x2c, 0xce, 0xd6, 0x03, 0x8b, 0x09, 0xf1, 0x43, 0x54, 0xe8, 0xc1, 0x54,
		0x28, 0x29, 0x72, 0x71, 0xba, 0x81, 0x14, 0xf9, 0x26, 0x16, 0x67, 0x0b, 0x89, 0x70, 0xb1, 0x16,
		0x24, 0x96, 0x64, 0x14, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x06, 0x41, 0x38, 0x4e, 0xad, 0x8c,
		0x5c, 0xc2, 0xc9, 0xf9, 0xb9, 0x7a, 0x68, 0x5a, 0x9d, 0xf8, 0xe0, 0x1a, 0x03, 0x40, 0x42, 0x01,
		0x8c, 0x51, 0x46, 0x50, 0x25, 0xe9, 0xf9, 0x39, 0x89, 0x79, 0xe9, 0x7a, 0xf9, 0x45, 0xe9, 0x08,
		0xa7, 0x94, 0x54, 0x16, 0xa4, 0x16, 0xeb, 0x67, 0xe7, 0xe5, 0x97, 0xe7, 0x41, 0x9c, 0x05, 0x72,
		0x55, 0x41, 0xd2, 0x0f, 0x46, 0xc6, 0x45, 0x4c, 0xcc, 0xee, 0x01, 0x4e, 0xab, 0x98, 0xe4, 0xdc,
		0x21, 0xba, 0x03, 0xa0, 0x5a, 0xf4, 0xc2, 0x53, 0x73, 0x72, 0xbc, 0x41, 0x1a, 0x42, 0x40, 0x7a,
		0x93, 0xd8, 0xc0, 0x66, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x94, 0x66, 0x94, 0x9d, 0xe6,
		0x00, 0x00, 0x00,
	},
	// uber/cadence/api/v1/domain.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdd, 0x72, 0xdb, 0x44,
		0x14, 0x46, 0x76, 0x13, 0xd2, 0x63, 0xc7, 0x71, 0x36, 0x49, 0xa3, 0x1a, 0x86, 0xba, 0x2e, 0x65,
		0x4c, 0x67, 0x90, 0x9b, 0xc0, 0x40, 0xcb, 0xcf, 0x0c, 0x4e, 0xac, 0x16, 0x33, 0x21, 0x64, 0x64,
		0x37, 0xcc, 0xd0, 0x0b, 0xcd, 0x5a, 0x5a, 0x3b, 0x4b, 0x65, 0xad, 0x66, 0xb5, 0x72, 0xeb, 0x2b,
		0x18, 0xde, 0x82, 0x17, 0xe0, 0x21, 0xb8, 0xe4, 0xa5, 0xb8, 0x84, 0xd1, 0x6a, 0xa5, 0x58, 0xb6,
		0x9a, 0xe4, 0x86, 0xbb, 0xdd, 0xf3, 0xf3, 0x9d, 0xb3, 0x67, 0xbf, 0x73, 0x56, 0x82, 0x66, 0x34,
		0x22, 0xbc, 0xe3, 0x60, 0x97, 0xf8, 0x0e, 0xe9, 0xe0, 0x80, 0x76, 0x66, 0x07, 0x1d, 0x97, 0x4d,
		0x31, 0xf5, 0x8d, 0x80, 0x33, 0xc1, 0xd0, 0x4e, 0x6c, 0x61, 0x28, 0x0b, 0x03, 0x07, 0xd4, 0x98,
		0x1d, 0x34, 0x3e, 0x98, 0x30, 0x36, 0xf1, 0x48, 0x47, 0x9a, 0x8c, 0xa2, 0x71, 0xc7, 0x8d, 0x38,
		0x16, 0x94, 0x29, 0xa7, 0xc6, 0xbd, 0x65, 0xbd, 0xa0, 0x53, 0x12, 0x0a, 0x3c, 0x0d, 0x94, 0x41,
		0x61, 0x5c, 0x87, 0x4d, 0xa7, 0x29, 0x44, 0xeb, 0x4f, 0x80, 0xf5, 0x9e, 0x4c, 0x04, 0xd5, 0xa0,
		0x44, 0x5d, 0x5d, 0x6b, 0x6a, 0xed, 0xdb, 0x56, 0x89, 0xba, 0x08, 0xc1, 0x2d, 0x1f, 0x4f, 0x89,
		0x5e, 0x92, 0x12, 0xb9, 0x46, 0x4f, 0x61, 0x3d, 0x14, 0x58, 0x44, 0xa1, 0x5e, 0x6e, 0x6a, 0xed,
		0xda, 0xe1, 0x7d, 0xa3, 0x20, 0x6f, 0x23, 0x01, 0x1c, 0x48, 0x43, 0x4b, 0x39, 0xa0, 0x26, 0x54,
		0x5c, 0x12, 0x3a, 0x9c, 0x06, 0xf1, 0x09, 0xf4, 0x5b, 0x12, 0x75, 0x51, 0x84, 0xee, 0x41, 0x85,
		0xbd, 0xf6, 0x09, 0xb7, 0xc9, 0x14, 0x53, 0x4f, 0x5f, 0x93, 0x16, 0x20, 0x45, 0x66, 0x2c, 0x41,
		0x4f, 0xe1, 0x96, 0x8b, 0x05, 0xd6, 0xd7, 0x9b, 0xe5, 0x76, 0xe5, 0xf0, 0xe1, 0x15, 0xb1, 0x8d,
		0x1e, 0x16, 0xd8, 0xf4, 0x05, 0x9f, 0x5b, 0xd2, 0x05, 0x5d, 0xc0, 0x83, 0xd7, 0x8c, 0xbf, 0x1a,
		0x7b, 0xec, 0xb5, 0x4d, 0xde, 0x10, 0x27, 0x8a, 0x23, 0xda, 0x9c, 0x08, 0xe2, 0xcb, 0x55, 0x40,
		0x38, 0x65, 0xae, 0xfe, 0x6e, 0x53, 0x6b, 0x57, 0x0e, 0xef, 0x1a, 0x49, 0x61, 0x8d, 0xb4, 0xb0,
		0x46, 0x4f, 0x15, 0xde, 0x6a, 0xa6, 0x28, 0x66, 0x0a, 0x62, 0xa5, 0x18, 0x67, 0x12, 0x02, 0x1d,
		0x43, 0x75, 0x84, 0x5d, 0x7b, 0x44, 0x7d, 0xcc, 0x29, 0x09, 0xf5, 0x0d, 0x09, 0xd9, 0x2c, 0x4c,
		0xf6, 0x08, 0xbb, 0x47, 0xca, 0xce, 0xaa, 0x8c, 0x2e, 0x37, 0xe8, 0x25, 0xec, 0x5f, 0xd0, 0x50,
		0x30, 0x3e, 0xb7, 0x31, 0x77, 0x2e, 0xe8, 0x0c, 0x7b, 0xb6, 0x2a, 0xfc, 0x6d, 0x59, 0xf8, 0x07,
		0x85, 0x78, 0x5d, 0x65, 0xab, 0x4a, 0xbf, 0xa7, 0x30, 0xf2, 0x62, 0xf4, 0x18, 0x76, 0x57, 0xc0,
		0x23, 0x4e, 0x75, 0x90, 0x05, 0x47, 0x4b, 0x4e, 0x2f, 0x38, 0x45, 0x18, 0x1a, 0x33, 0x1a, 0xd2,
		0x11, 0xf5, 0xa8, 0x58, 0xcd, 0xa8, 0x72, 0xf3, 0x8c, 0xf4, 0x4b, 0x98, 0xa5, 0xa4, 0x3e, 0x87,
		0xfd, 0xa2, 0x10, 0x71, 0x5e, 0x55, 0x99, 0xd7, 0xde, 0xaa, 0x6b, 0x9c, 0x9a, 0x01, 0x3b, 0xd8,
		0x11, 0x74, 0x46, 0x6c, 0xc7, 0x8b, 0x42, 0x41, 0xb8, 0x2d, 0x49, 0xbb, 0x29, 0x7d, 0xb6, 0x13,
		0xd5, 0x71, 0xa2, 0x39, 0x8d, 0x19, 0x7c, 0x06, 0x1b, 0xca, 0x30, 0xd4, 0x6b, 0x92, 0x47, 0x9f,
		0x15, 0x26, 0xae, 0x7c, 0x2c, 0x12, 0x78, 0xd4, 0x91, 0x77, 0x7f, 0xcc, 0xfc, 0x31, 0x9d, 0xa4,
		0x44, 0xc8, 0x50, 0xd0, 0xc7, 0x50, 0x1f, 0x63, 0xea, 0xb1, 0x19, 0xe1, 0xf6, 0x8c, 0xf0, 0x30,
		0x66, 0xf7, 0x56, 0x53, 0x6b, 0x97, 0xad, 0xad, 0x54, 0x7e, 0x9e, 0x88, 0x51, 0x1b, 0xea, 0x34,
		0xb4, 0x27, 0x1e, 0x1b, 0x61, 0xcf, 0x4e, 0xfa, 0x5f, 0xaf, 0x37, 0xb5, 0xf6, 0x86, 0x55, 0xa3,
		0xe1, 0x73, 0x29, 0x56, 0xcd, 0xf8, 0x0c, 0x36, 0x33, 0x50, 0xea, 0x8f, 0x99, 0xbe, 0x2d, 0x69,
		0x54, 0xdc, 0x6f, 0xcf, 0x94, 0x65, 0xdf, 0x1f, 0x33, 0xab, 0x3a, 0x5e, 0xd8, 0xa1, 0x97, 0x71,
		0x44, 0xe6, 0xc9, 0x9c, 0xed, 0x09, 0x67, 0x51, 0x10, 0xea, 0x48, 0x42, 0x3d, 0x2e, 0x84, 0xea,
		0xa7, 0xc6, 0xcf, 0x63, 0xdb, 0xfc, 0x91, 0xb7, 0x68, 0x4e, 0x19, 0x22, 0x07, 0xf6, 0x70, 0x38,
		0xf7, 0x1d, 0x3b, 0x6b, 0x2d, 0x47, 0x3a, 0xe8, 0x3b, 0x32, 0x42, 0xa7, 0x98, 0x11, 0xb1, 0xc7,
		0x4f, 0xca, 0x21, 0x1f, 0x60, 0x07, 0xaf, 0xea, 0xd0, 0x09, 0x6c, 0xe5, 0x2f, 0x38, 0xd4, 0x77,
		0x25, 0xfc, 0x5b, 0x08, 0xb7, 0x78, 0xe3, 0xa1, 0x55, 0xcb, 0x31, 0x20, 0x6c, 0x7c, 0x01, 0xb7,
		0xb3, 0xd1, 0x80, 0xea, 0x50, 0x7e, 0x45, 0xe6, 0x6a, 0xe4, 0xc5, 0x4b, 0xb4, 0x0b, 0x6b, 0x33,
		0xec, 0x45, 0xe9, 0xd0, 0x4b, 0x36, 0x5f, 0x96, 0x9e, 0x68, 0xad, 0x1e, 0xdc, 0xbb, 0x86, 0x12,
		0xe8, 0x3e, 0x54, 0x73, 0x1c, 0x4c, 0x70, 0x2b, 0xce, 0x25, 0xfb, 0x5a, 0x7f, 0x69, 0x50, 0x59,
		0x68, 0x7a, 0xf4, 0x3d, 0x6c, 0x64, 0x83, 0x42, 0x93, 0x6c, 0x34, 0xae, 0x1b, 0x14, 0x46, 0xba,
		0x48, 0xc6, 0x5b, 0xe6, 0xdf, 0xb0, 0x61, 0x33, 0xa7, 0x2a, 0x38, 0xde, 0x93, 0xc5, 0xe3, 0x55,
		0x0e, 0x5b, 0x57, 0xc6, 0x9a, 0x4b, 0x3a, 0x2d, 0x94, 0xe0, 0x77, 0x0d, 0x36, 0x73, 0x4a, 0x74,
		0x07, 0xd6, 0x39, 0xc1, 0x21, 0xf3, 0x55, 0x10, 0xb5, 0x43, 0x0d, 0xd8, 0x60, 0x01, 0xe1, 0x58,
		0x30, 0xae, 0x2a, 0x99, 0xed, 0xd1, 0x37, 0x50, 0x75, 0x38, 0xc1, 0x82, 0xb8, 0x76, 0xfc, 0x5c,
		0xc9, 0x87, 0xa4, 0x72, 0xd8, 0x58, 0x19, 0xb9, 0xc3, 0xf4, 0x2d, 0xb3, 0x2a, 0xca, 0x3e, 0x96,
		0xb4, 0xfe, 0x2e, 0x41, 0x75, 0x91, 0xef, 0x85, 0xed, 0xa7, 0x15, 0xb7, 0xdf, 0x10, 0xf4, 0xcc,
		0x34, 0x14, 0x98, 0x0b, 0x3b, 0x7b, 0x30, 0x55, 0x45, 0xae, 0x4a, 0xe3, 0x4e, 0xea, 0x3b, 0x88,
		0x5d, 0x33, 0x39, 0x3a, 0x87, 0xbb, 0x19, 0x2a, 0x79, 0x13, 0x50, 0x4e, 0x16, 0x60, 0xaf, 0x3f,
		0xdd, 0x7e, 0xea, 0x6c, 0x4a, 0xdf, 0x4b, 0xdc, 0x43, 0xd8, 0x73, 0xd8, 0x34, 0xf0, 0x48, 0x5c,
		0xaa, 0xf0, 0x02, 0x73, 0xd7, 0x76, 0x58, 0xe4, 0x0b, 0xf9, 0x74, 0xae, 0x59, 0x3b, 0x99, 0x72,
		0x10, 0xeb, 0x8e, 0x63, 0x15, 0x7a, 0x08, 0xb5, 0x80, 0xf8, 0x2e, 0xf5, 0x27, 0x89, 0x47, 0xa8,
		0xaf, 0x35, 0xcb, 0xed, 0x35, 0x6b, 0x53, 0x49, 0xa5, 0x69, 0xd8, 0xfa, 0xb7, 0x0c, 0xb5, 0x7c,
		0xa3, 0x20, 0x17, 0xb6, 0x39, 0x99, 0xc4, 0x53, 0x42, 0xb0, 0xb4, 0xd3, 0x14, 0x25, 0x9f, 0xdc,
		0xa0, 0xd1, 0x0c, 0x4b, 0x3a, 0x0f, 0x99, 0x12, 0x24, 0xe4, 0xdc, 0xe2, 0x79, 0x29, 0xfa, 0x43,
		0x83, 0x0f, 0x97, 0xba, 0xd9, 0x1e, 0xcd, 0xb3, 0xd1, 0x8d, 0x85, 0xe0, 0x74, 0x14, 0x89, 0x98,
		0xa0, 0x71, 0xe4, 0xfe, 0x4d, 0x22, 0xe7, 0xb7, 0x47, 0x73, 0xb5, 0xea, 0xa6, 0x58, 0x49, 0x2a,
		0x4d, 0x7c, 0x8d, 0x59, 0xe3, 0x17, 0xd8, 0x2d, 0x3a, 0x44, 0x41, 0x1b, 0x7d, 0x9d, 0x6f, 0xa3,
		0x8f, 0xae, 0xcf, 0x72, 0xa9, 0x95, 0x1a, 0xbf, 0xc2, 0xc3, 0x1b, 0xa5, 0x5d, 0x10, 0xfc, 0xdb,
		0x7c, 0xf0, 0x47, 0x57, 0xbd, 0x5e, 0x19, 0xd8, 0xc0, 0x61, 0x01, 0x59, 0xec, 0xe5, 0x7f, 0x34,
		0xd8, 0x2b, 0x34, 0x42, 0x01, 0xa0, 0x95, 0xeb, 0x48, 0x87, 0x53, 0xf7, 0xe6, 0xc1, 0x56, 0xa4,
		0x6a, 0x5e, 0x6d, 0x3b, 0xcb, 0xf2, 0x86, 0x07, 0x77, 0x8a, 0x8d, 0xff, 0x8f, 0xd2, 0xb7, 0x7c,
		0xd8, 0x5e, 0xd1, 0xbf, 0xed, 0x2b, 0x42, 0x7b, 0xdb, 0x57, 0x44, 0xd1, 0xd0, 0x29, 0x15, 0x0e,
		0x9d, 0x47, 0xbf, 0x69, 0x50, 0x5d, 0xfc, 0x20, 0x46, 0x77, 0x61, 0xaf, 0xf7, 0xe3, 0x0f, 0xdd,
		0xfe, 0xa9, 0x3d, 0x18, 0x76, 0x87, 0x2f, 0x06, 0x76, 0xff, 0xf4, 0xbc, 0x7b, 0xd2, 0xef, 0xd5,
		0xdf, 0x41, 0xef, 0x83, 0x9e, 0x57, 0x59, 0xe6, 0xf3, 0xfe, 0x60, 0x68, 0x5a, 0x66, 0xaf, 0xae,
		0xad, 0x6a, 0x7b, 0xe6, 0x99, 0x65, 0x1e, 0x77, 0x87, 0x66, 0xaf, 0x5e, 0x5a, 0x85, 0xed, 0x99,
		0x27, 0x66, 0xac, 0x2a, 0x3f, 0xba, 0x80, 0xda, 0xd2, 0xd7, 0xd6, 0x7b, 0xb0, 0xdf, 0xb5, 0x8e,
		0xbf, 0xeb, 0x9f, 0x77, 0x4f, 0x0a, 0xb3, 0x58, 0x56, 0xf6, 0xfa, 0x83, 0xee, 0xd1, 0x89, 0xcc,
		0xa2, 0xc0, 0xd5, 0x3c, 0x4d, 0x94, 0xa5, 0xa3, 0x97, 0xb0, 0xef, 0xb0, 0x69, 0xd1, 0xa5, 0x1c,
		0x55, 0x92, 0x22, 0x9c, 0xc5, 0x13, 0xf0, 0x4c, 0xfb, 0xf9, 0x60, 0x42, 0xc5, 0x45, 0x34, 0x32,
		0x1c, 0x36, 0xed, 0x2c, 0xfe, 0xa5, 0x7c, 0x42, 0x5d, 0xaf, 0x33, 0x61, 0xc9, 0x3f, 0x8d, 0xfa,
		0x65, 0xf9, 0x0a, 0x07, 0x74, 0x76, 0x30, 0x5a, 0x97, 0xb2, 0x4f, 0xff, 0x0b, 0x00, 0x00, 0xff,
		0xff, 0x27, 0x64, 0x68, 0x74, 0x4e, 0x0d, 0x00, 0x00,
	},
	// google/protobuf/timestamp.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0xcf, 0xcf, 0x4f,
		0xcf, 0x49, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x2f, 0xc9, 0xcc, 0x4d,
		0x2d, 0x2e, 0x49, 0xcc, 0x2d, 0xd0, 0x03, 0x0b, 0x09, 0xf1, 0x43, 0x14, 0xe8, 0xc1, 0x14, 0x28,
		0x59, 0x73, 0x71, 0x86, 0xc0, 0xd4, 0x08, 0x49, 0x70, 0xb1, 0x17, 0xa7, 0x26, 0xe7, 0xe7, 0xa5,
		0x14, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0xc1, 0xb8, 0x42, 0x22, 0x5c, 0xac, 0x79, 0x89,
		0x79, 0xf9, 0xc5, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x10, 0x8e, 0x53, 0x2b, 0x23, 0x97,
		0x70, 0x72, 0x7e, 0xae, 0x1e, 0x9a, 0xa1, 0x4e, 0x7c, 0x70, 0x23, 0x03, 0x40, 0x42, 0x01, 0x8c,
		0x51, 0x46, 0x50, 0x25, 0xe9, 0xf9, 0x39, 0x89, 0x79, 0xe9, 0x7a, 0xf9, 0x45, 0xe9, 0x48, 0x6e,
		0xac, 0x2c, 0x48, 0x2d, 0xd6, 0xcf, 0xce, 0xcb, 0x2f, 0xcf, 0x43, 0xb8, 0xb7, 0x20, 0xe9, 0x07,
		0x23, 0xe3, 0x22, 0x26, 0x66, 0xf7, 0x00, 0xa7, 0x55, 0x4c, 0x72, 0xee, 0x10, 0xdd, 0x01, 0x50,
		0x2d, 0x7a, 0xe1, 0xa9, 0x39, 0x39, 0xde, 0x20, 0x0d, 0x21, 0x20, 0xbd, 0x49, 0x6c, 0x60, 0xb3,
		0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xae, 0x65, 0xce, 0x7d, 0xff, 0x00, 0x00, 0x00,
	},
	// uber/cadence/api/v1/common.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x72, 0xdb, 0x46,
		0x12, 0x36, 0x44, 0xeb, 0xaf, 0x29, 0x4b, 0xd4, 0xc8, 0x3f, 0xb4, 0x6c, 0xd9, 0x12, 0x5d, 0x2e,
		0xcb, 0xae, 0x35, 0xb9, 0xa2, 0x76, 0xb7, 0x5c, 0xeb, 0xf5, 0xee, 0x52, 0x14, 0x24, 0xc1, 0xd2,
		0x92, 0xdc, 0x21, 0x6c, 0xad, 0x36, 0x55, 0x41, 0x0d, 0x81, 0x21, 0x3d, 0x11, 0x88, 0x61, 0x06,
		0x03, 0x5a, 0xbc, 0xa4, 0x72, 0x48, 0x2e, 0x79, 0x88, 0x1c, 0xf2, 0x1a, 0x79, 0x84, 0x1c, 0xf3,
		0x16, 0x79, 0x8a, 0x14, 0x06, 0x03, 0x8a, 0x54, 0x68, 0xd3, 0x87, 0x54, 0x6e, 0x98, 0xee, 0xef,
		0xeb, 0xf9, 0x7a, 0x30, 0xdd, 0x0d, 0xc0, 0x66, 0xd4, 0xa2, 0xa2, 0xe4, 0x12, 0x8f, 0x06, 0x2e,
		0x2d, 0x91, 0x1e, 0x2b, 0xf5, 0x77, 0x4a, 0x2e, 0xef, 0x76, 0x79, 0x50, 0xec, 0x09, 0x2e, 0x39,
		0x5a, 0x8b, 0x11, 0x45, 0x8d, 0x28, 0x92, 0x1e, 0x2b, 0xf6, 0x77, 0xd6, 0x1f, 0x74, 0x38, 0xef,
		0xf8, 0xb4, 0xa4, 0x20, 0xad, 0xa8, 0x5d, 0xf2, 0x22, 0x41, 0x24, 0x4b, 0x49, 0x85, 0x63, 0x58,
		0x3d, 0xe5, 0xe2, 0xbc, 0xed, 0xf3, 0xf7, 0xe6, 0x05, 0x75, 0xa3, 0xd8, 0x85, 0x1e, 0x42, 0xf6,
		0xbd, 0x36, 0x3a, 0xcc, 0xcb, 0x1b, 0x9b, 0xc6, 0xf6, 0x22, 0x86, 0xd4, 0x64, 0x79, 0xe8, 0x16,
		0xcc, 0x89, 0x28, 0x88, 0x7d, 0x33, 0xca, 0x37, 0x2b, 0xa2, 0xc0, 0xf2, 0x0a, 0x05, 0x58, 0x4a,
		0x83, 0xd9, 0x83, 0x1e, 0x45, 0x08, 0xae, 0x07, 0xa4, 0x4b, 0x75, 0x00, 0xf5, 0x1c, 0x63, 0x2a,
		0xae, 0x64, 0x7d, 0x26, 0x07, 0x1f, 0xc4, 0x6c, 0xc0, 0x7c, 0x83, 0x0c, 0x7c, 0x4e, 0xbc, 0xd8,
		0xed, 0x11, 0x49, 0x94, 0x7b, 0x09, 0xab, 0xe7, 0xc2, 0x4b, 0x98, 0x3f, 0x20, 0xcc, 0x8f, 0x04,
		0x45, 0xb7, 0x61, 0x4e, 0x50, 0x12, 0xf2, 0x40, 0xf3, 0xf5, 0x0a, 0xe5, 0x61, 0xde, 0xa3, 0x92,
		0x30, 0x3f, 0x54, 0x0a, 0x97, 0x70, 0xba, 0x2c, 0x7c, 0x6f, 0xc0, 0xf5, 0xff, 0xd0, 0x2e, 0x47,
		0xaf, 0x60, 0xae, 0xcd, 0xa8, 0xef, 0x85, 0x79, 0x63, 0x33, 0xb3, 0x9d, 0x2d, 0x3f, 0x2e, 0x4e,
		0x38, 0xbf, 0x62, 0x0c, 0x2d, 0x1e, 0x28, 0x9c, 0x19, 0x48, 0x31, 0xc0, 0x9a, 0xb4, 0x7e, 0x0a,
		0xd9, 0x11, 0x33, 0xca, 0x41, 0xe6, 0x9c, 0x0e, 0xb4, 0x8a, 0xf8, 0x11, 0x95, 0x61, 0xb6, 0x4f,
		0xfc, 0x88, 0x2a, 0x01, 0xd9, 0xf2, 0xfd, 0x89, 0xe1, 0x75, 0x9a, 0x38, 0x81, 0xfe, 0x7d, 0xe6,
		0x85, 0x51, 0xf8, 0xc1, 0x80, 0xb9, 0x23, 0x4a, 0x3c, 0x2a, 0xd0, 0xbf, 0xae, 0x48, 0x7c, 0x32,
		0x31, 0x46, 0x02, 0xfe, 0x63, 0x45, 0xfe, 0x6c, 0x40, 0xae, 0x49, 0x89, 0x70, 0xdf, 0x55, 0xa4,
		0x14, 0xac, 0x15, 0x49, 0x1a, 0x22, 0x07, 0x96, 0x59, 0xe0, 0xd1, 0x0b, 0xea, 0x39, 0x63, 0xb2,
		0x5f, 0x4c, 0x8c, 0x7a, 0x95, 0x5e, 0xb4, 0x12, 0xee, 0x68, 0x1e, 0x37, 0xd8, 0xa8, 0x6d, 0xfd,
		0x73, 0x40, 0xbf, 0x05, 0xfd, 0x8e, 0x59, 0xb5, 0x61, 0x61, 0x9f, 0x48, 0xb2, 0xe7, 0xf3, 0x16,
		0x3a, 0x80, 0x1b, 0x34, 0x70, 0xb9, 0xc7, 0x82, 0x8e, 0x23, 0x07, 0xbd, 0xe4, 0x82, 0x2e, 0x97,
		0xb7, 0x26, 0xc6, 0x32, 0x35, 0x32, 0xbe, 0xd1, 0x78, 0x89, 0x8e, 0xac, 0x86, 0x17, 0x78, 0x66,
		0xe4, 0x02, 0x37, 0x92, 0xa2, 0xa3, 0xe2, 0x2d, 0x15, 0x21, 0xe3, 0x81, 0x15, 0xb4, 0x79, 0x0c,
		0x64, 0xdd, 0x9e, 0x9f, 0x16, 0x42, 0xfc, 0x8c, 0x9e, 0xc0, 0x4a, 0x9b, 0x12, 0x19, 0x09, 0xea,
		0xf4, 0x13, 0xa8, 0x2e, 0xb8, 0x65, 0x6d, 0xd6, 0x01, 0x0a, 0xc7, 0x70, 0xa7, 0x19, 0xf5, 0x7a,
		0x5c, 0x48, 0xea, 0x55, 0x7d, 0x46, 0x03, 0xa9, 0x3d, 0x61, 0x5c, 0xab, 0x1d, 0xee, 0x84, 0xde,
		0xb9, 0x8e, 0x3c, 0xdb, 0xe1, 0x4d, 0xef, 0x1c, 0xdd, 0x85, 0x85, 0x2f, 0x48, 0x9f, 0x28, 0x47,
		0x12, 0x73, 0x3e, 0x5e, 0x37, 0xbd, 0xf3, 0xc2, 0xd7, 0x19, 0xc8, 0x62, 0x2a, 0xc5, 0xa0, 0xc1,
		0x7d, 0xe6, 0x0e, 0xd0, 0x3e, 0xe4, 0x58, 0xc0, 0x24, 0x23, 0xbe, 0xc3, 0x02, 0x49, 0x45, 0x9f,
		0x24, 0x2a, 0xb3, 0xe5, 0xbb, 0xc5, 0xa4, 0xbd, 0x14, 0xd3, 0xf6, 0x52, 0xdc, 0xd7, 0xed, 0x05,
		0xaf, 0x68, 0x8a, 0xa5, 0x19, 0xa8, 0x04, 0x6b, 0x2d, 0xe2, 0x9e, 0xf3, 0x76, 0xdb, 0x71, 0x39,
		0x6d, 0xb7, 0x99, 0x1b, 0xcb, 0x54, 0x7b, 0x1b, 0x18, 0x69, 0x57, 0xf5, 0xd2, 0x13, 0x6f, 0xdb,
		0x25, 0x17, 0xac, 0x1b, 0x75, 0x2f, 0xb7, 0xcd, 0x4c, 0xdd, 0x56, 0x53, 0x86, 0xdb, 0x3e, 0xbd,
		0x8c, 0x42, 0xa4, 0xa4, 0xdd, 0x9e, 0x0c, 0xf3, 0xd7, 0x37, 0x8d, 0xed, 0xd9, 0x21, 0xb4, 0xa2,
		0xcd, 0xe8, 0x15, 0xdc, 0x0b, 0x78, 0xe0, 0x88, 0x38, 0x75, 0xd2, 0xf2, 0xa9, 0x43, 0x85, 0xe0,
		0xc2, 0x49, 0x5a, 0x4a, 0x98, 0x9f, 0xdd, 0xcc, 0x6c, 0x2f, 0xe2, 0x7c, 0xc0, 0x03, 0x9c, 0x22,
		0xcc, 0x18, 0x80, 0x13, 0x3f, 0x7a, 0x0d, 0x6b, 0xf4, 0xa2, 0xc7, 0x12, 0x21, 0x97, 0x92, 0xe7,
		0xa6, 0x49, 0x46, 0x97, 0xac, 0x54, 0x75, 0xa1, 0x0b, 0x77, 0xac, 0x90, 0xfb, 0xca, 0x78, 0x28,
		0x78, 0xd4, 0x6b, 0x10, 0x21, 0x99, 0x6a, 0xce, 0x13, 0x1a, 0x26, 0xfa, 0x27, 0xcc, 0x86, 0x92,
		0xc8, 0xe4, 0xc2, 0x2f, 0x97, 0xb7, 0x27, 0x5e, 0xd2, 0xf1, 0x80, 0xcd, 0x18, 0x8f, 0x13, 0x5a,
		0xa1, 0x0f, 0xf7, 0xc6, 0xbd, 0x55, 0x1e, 0xb4, 0x59, 0x47, 0x2b, 0x44, 0xa7, 0x90, 0x63, 0xa9,
		0xdb, 0xe9, 0xc4, 0xfe, 0xb4, 0xb4, 0xff, 0xf4, 0x09, 0x3b, 0x0d, 0xa5, 0xe3, 0x15, 0x36, 0xe6,
		0x08, 0x0b, 0x3f, 0x19, 0xb0, 0x5e, 0x09, 0x07, 0x81, 0x9b, 0x8e, 0x8d, 0xf1, 0x7d, 0xf3, 0x30,
		0x4f, 0x83, 0xf8, 0x9c, 0x93, 0x19, 0xb4, 0x80, 0xd3, 0x25, 0x2a, 0xc3, 0xad, 0x9e, 0xa0, 0x1e,
		0x6d, 0xb3, 0x80, 0x7a, 0xce, 0x97, 0x11, 0x8d, 0xa8, 0xa3, 0x4e, 0x25, 0xb9, 0xca, 0x6b, 0x97,
		0xce, 0xff, 0xc6, 0xbe, 0x5a, 0x7c, 0x48, 0x1b, 0x00, 0x09, 0x50, 0x95, 0x73, 0x46, 0x01, 0x17,
		0x95, 0x45, 0x15, 0xea, 0xbf, 0x61, 0x29, 0x71, 0xbb, 0x4a, 0x83, 0xba, 0x24, 0xd9, 0xf2, 0xc6,
		0xc4, 0x04, 0xd3, 0x2e, 0x81, 0xb3, 0x8a, 0x92, 0xa8, 0x2e, 0xfc, 0x92, 0x81, 0xfb, 0x6a, 0xb6,
		0xd1, 0xaa, 0x1f, 0x85, 0x92, 0x8a, 0x26, 0xf5, 0xa9, 0x1b, 0x67, 0xa2, 0x0b, 0xa9, 0x0e, 0x0b,
		0xa1, 0x14, 0x44, 0xd2, 0xce, 0x40, 0xb7, 0x93, 0xdd, 0x89, 0xe1, 0x27, 0x07, 0x69, 0x6a, 0x2a,
		0x1e, 0x06, 0x41, 0xdf, 0x18, 0xf0, 0x88, 0x28, 0xb0, 0xe3, 0x26, 0x68, 0x27, 0x94, 0xcc, 0x3d,
		0x1f, 0x38, 0x82, 0x76, 0xe2, 0x97, 0xa5, 0x73, 0x49, 0xfa, 0xe0, 0x5f, 0x3e, 0x61, 0x33, 0xc5,
		0xc6, 0x8a, 0x9c, 0x64, 0x75, 0x74, 0x0d, 0x3f, 0x24, 0x1f, 0x87, 0xa0, 0xef, 0x0c, 0x78, 0x7c,
		0x45, 0x06, 0xbd, 0x90, 0x54, 0x04, 0xc4, 0x77, 0x68, 0x20, 0x99, 0x1c, 0xa4, 0x42, 0x92, 0xfa,
		0xfd, 0xdb, 0x74, 0x21, 0xa6, 0xe6, 0x9b, 0x8a, 0x3e, 0x94, 0xb2, 0x45, 0xa6, 0x81, 0x10, 0x86,
		0xd5, 0x54, 0x04, 0x49, 0x87, 0x8b, 0x7e, 0x99, 0x93, 0x47, 0xbc, 0x0e, 0x36, 0x9c, 0x44, 0x38,
		0xe7, 0x5e, 0xb1, 0xec, 0xad, 0xc2, 0x4a, 0x7a, 0xe6, 0x3a, 0x93, 0xc2, 0x3f, 0x20, 0x77, 0x95,
		0x88, 0x6e, 0xc2, 0x6c, 0xe8, 0xf2, 0x5e, 0x5a, 0x9b, 0xc9, 0x62, 0x58, 0xb0, 0x33, 0x23, 0x5f,
		0x38, 0x07, 0xf0, 0x70, 0xca, 0xb9, 0xa3, 0x47, 0x70, 0x63, 0xec, 0x5d, 0xea, 0xa0, 0x4b, 0xe1,
		0x08, 0xb4, 0xf0, 0xad, 0x01, 0x5b, 0x53, 0xcf, 0x0d, 0xfd, 0x19, 0x6e, 0x5e, 0x7d, 0x1f, 0xc3,
		0x91, 0xb6, 0x18, 0xf7, 0x9f, 0x51, 0x8e, 0x2a, 0x86, 0x62, 0xdc, 0xcb, 0xc6, 0x19, 0xf1, 0x8c,
		0x4d, 0x52, 0x58, 0x1d, 0x27, 0x1c, 0xd3, 0xc1, 0xb3, 0xf7, 0xb0, 0x34, 0x3a, 0x03, 0xd1, 0x5d,
		0xb8, 0x65, 0xd6, 0xaa, 0xf5, 0x7d, 0xab, 0x76, 0xe8, 0xd8, 0x67, 0x0d, 0xd3, 0xb1, 0x6a, 0x6f,
		0x2b, 0x27, 0xd6, 0x7e, 0xee, 0x1a, 0x5a, 0x87, 0xdb, 0xe3, 0x2e, 0xfb, 0x08, 0x5b, 0x07, 0x36,
		0x3e, 0xcd, 0x19, 0xe8, 0x36, 0xa0, 0x71, 0xdf, 0xeb, 0x66, 0xbd, 0x96, 0x9b, 0x41, 0x79, 0xb8,
		0x39, 0x6e, 0x6f, 0xe0, 0xba, 0x5d, 0xdf, 0xcd, 0x65, 0x9e, 0x7d, 0x05, 0x6b, 0x13, 0xfa, 0x1a,
		0xda, 0x82, 0x0d, 0xab, 0x59, 0x3f, 0xa9, 0xd8, 0x56, 0xbd, 0xe6, 0x1c, 0xe2, 0xfa, 0x9b, 0x86,
		0xd3, 0xb4, 0x2b, 0xf6, 0xa8, 0x8e, 0x0f, 0x42, 0x8e, 0xcc, 0xca, 0x89, 0x7d, 0x74, 0x96, 0x33,
		0x3e, 0x0c, 0xd9, 0xc7, 0x15, 0xab, 0x66, 0xee, 0xe7, 0x66, 0x9e, 0xfd, 0x68, 0xc0, 0x83, 0x8f,
		0x97, 0x2b, 0x7a, 0x0e, 0x4f, 0x2b, 0x55, 0xdb, 0x7a, 0x6b, 0x3a, 0xd5, 0x93, 0x37, 0x4d, 0xdb,
		0xc4, 0x4e, 0xd3, 0x3c, 0x31, 0xab, 0x2a, 0x68, 0xd3, 0xc6, 0x15, 0xdb, 0x3c, 0x3c, 0x1b, 0xd1,
		0xb5, 0x0b, 0xa5, 0xe9, 0x70, 0x6c, 0x1e, 0x26, 0x6b, 0xab, 0x7a, 0x1c, 0x2b, 0xfd, 0x2b, 0xec,
		0x4c, 0x27, 0x99, 0xff, 0xb3, 0x4d, 0x5c, 0xab, 0x9c, 0x38, 0x66, 0xcd, 0xb6, 0xec, 0xb3, 0xdc,
		0xcc, 0xde, 0x67, 0x70, 0xc7, 0xe5, 0xdd, 0x49, 0x55, 0xb1, 0x97, 0xad, 0xaa, 0x7f, 0x8b, 0x46,
		0x3c, 0xae, 0x1a, 0xc6, 0xff, 0x77, 0x3a, 0x4c, 0xbe, 0x8b, 0x5a, 0x45, 0x97, 0x77, 0x4b, 0xa3,
		0x7f, 0x22, 0xcf, 0x99, 0xe7, 0x97, 0x3a, 0x3c, 0xf9, 0xbf, 0xd0, 0xbf, 0x25, 0x2f, 0x49, 0x8f,
		0xf5, 0x77, 0x5a, 0x73, 0xca, 0xb6, 0xfb, 0x6b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x0c, 0xb2,
		0x04, 0xba, 0x0c, 0x00, 0x00,
	},
}

func init() {
	yarpc.RegisterClientBuilder(
		func(clientConfig transport.ClientConfig, structField reflect.StructField) DomainAPIYARPCClient {
			return NewDomainAPIYARPCClient(clientConfig, protobuf.ClientBuilderOptions(clientConfig, structField)...)
		},
	)
}
